{"ast":null,"code":"import _objectWithoutProperties from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/emp/front/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DateUtil } from \"@utils/date.util\";\nimport { axios } from \"@utils/network.util\";\nimport { flow, makeAutoObservable, reaction, runInAction } from \"mobx\";\n\nvar CalendarStore = /*#__PURE__*/function () {\n  function CalendarStore() {\n    var _this = this;\n\n    _classCallCheck(this, CalendarStore);\n\n    _defineProperty(this, \"_date\", new Date());\n\n    _defineProperty(this, \"_userCalendars\", []);\n\n    _defineProperty(this, \"_commonCalendars\", []);\n\n    _defineProperty(this, \"_selects\", []);\n\n    _defineProperty(this, \"_calendar\", {});\n\n    _defineProperty(this, \"_holidayMap\", {});\n\n    makeAutoObservable(this, {\n      syncHolidays: flow\n    }); // 캘린더 이벤트 항목 불러오기\n\n    reaction(function () {\n      return [_this.calendars, _this.date];\n    }, function () {\n      _this.syncCalendar();\n    }); // 특일정보 불러오기\n\n    reaction(function () {\n      return _this.date;\n    }, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(date, prevDate) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (date.getFullYear() !== (prevDate === null || prevDate === void 0 ? void 0 : prevDate.getFullYear())) {\n                  _this.syncHolidays();\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  _createClass(CalendarStore, [{\n    key: \"getCalendarData\",\n    value: function getCalendarData(calendarId) {\n      return this.calendarMap[calendarId];\n    }\n  }, {\n    key: \"setDate\",\n    value: function setDate(date) {\n      this._date = date;\n    }\n  }, {\n    key: \"setUserCalendars\",\n    value: function setUserCalendars(calendars) {\n      this._userCalendars = calendars;\n      this._selects = [].concat(_toConsumableArray(this._commonCalendars), _toConsumableArray(calendars)).map(function (_ref2) {\n        var calendarId = _ref2.calendarId;\n        return calendarId;\n      });\n    }\n  }, {\n    key: \"setSelctes\",\n    value: function setSelctes(selectIds) {\n      this._selects = selectIds;\n    }\n  }, {\n    key: \"setCalendar\",\n    value: function setCalendar(calendar) {\n      this._calendar = calendar;\n    }\n  }, {\n    key: \"syncHolidays\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function syncHolidays() {\n      var date, holidayMap, _yield$axios$get, specialDays;\n\n      return _regeneratorRuntime.wrap(function syncHolidays$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              date = this.date;\n              holidayMap = {};\n              _context2.next = 4;\n              return axios.get(\"/diary/special/\".concat(date.getFullYear()));\n\n            case 4:\n              _yield$axios$get = _context2.sent;\n              specialDays = _yield$axios$get.data;\n              specialDays.forEach(function (_ref3) {\n                var locDate = _ref3.locDate,\n                    sno = _ref3.sno,\n                    data = _objectWithoutProperties(_ref3, [\"locDate\", \"sno\"]);\n\n                if (sno === 0) {\n                  holidayMap[locDate] = [data];\n                } else {\n                  holidayMap[locDate].push(data);\n                }\n              });\n              this._holidayMap = holidayMap;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, syncHolidays, this);\n    })\n  }, {\n    key: \"syncCalendar\",\n    value: function () {\n      var _syncCalendar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var date, calendars, calendar, yyyymm, calendarStartDt, calendarEndDt;\n        return _regeneratorRuntime.wrap(function _callee3$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                date = this.date, calendars = this.calendars;\n                calendar = {};\n                yyyymm = DateUtil.format(date, \"yyyyMM\");\n                calendarStartDt = DateUtil.getCalendarStartDay(date);\n                calendarEndDt = DateUtil.getCalendarLastDay(date);\n                _context4.next = 7;\n                return Promise.all(calendars.map( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref4) {\n                    var calendarId, _yield$axios$get2, events;\n\n                    return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            calendarId = _ref4.calendarId;\n                            _context3.next = 3;\n                            return axios.get(\"/diary/calendar/\".concat(calendarId, \"/event?yyyymm=\").concat(yyyymm));\n\n                          case 3:\n                            _yield$axios$get2 = _context3.sent;\n                            events = _yield$axios$get2.data;\n                            events.forEach(function (_ref6) {\n                              var _startDt = _ref6.startDt,\n                                  _endDt = _ref6.endDt,\n                                  event = _objectWithoutProperties(_ref6, [\"startDt\", \"endDt\"]);\n\n                              var startDt = new Date(_startDt);\n                              var endDt = new Date(_endDt);\n                              var isBefore = DateUtil.diffDay(calendarStartDt, startDt) > 0;\n                              var isAfter = DateUtil.diffDay(endDt, calendarEndDt) > 0;\n                              var ymd = DateUtil.format(startDt, \"yyyyMMdd\");\n                              var colSpan = DateUtil.diffDay(endDt, startDt) + 1;\n                              var diffWeek = DateUtil.diffWeek(endDt, startDt);\n\n                              if (isBefore) {\n                                diffWeek = DateUtil.diffWeek(endDt, calendarStartDt);\n                              } else if (isAfter) {\n                                diffWeek = DateUtil.diffWeek(calendarEndDt, startDt);\n                              }\n\n                              if (diffWeek === 0) {\n                                if (isBefore) {\n                                  ymd = DateUtil.format(calendarStartDt, \"yyyyMMdd\");\n                                  colSpan = DateUtil.diffDay(endDt, calendarStartDt) + 1;\n                                } else if (isAfter) {\n                                  ymd = DateUtil.format(startDt, \"yyyyMMdd\");\n                                  colSpan = DateUtil.diffDay(calendarEndDt, startDt) + 1;\n                                }\n\n                                var data = _objectSpread(_objectSpread({}, event), {}, {\n                                  calendarId: calendarId,\n                                  colSpan: colSpan,\n                                  startDt: startDt,\n                                  endDt: endDt,\n                                  eventStartDt: startDt\n                                });\n\n                                if (calendar[ymd]) {\n                                  calendar[ymd].push(data);\n                                } else {\n                                  calendar[ymd] = [data];\n                                }\n                              } else {\n                                for (var i = 0; i < diffWeek + 1; i++) {\n                                  var eventStartDt = i === 0 ? isBefore ? calendarStartDt : startDt : DateUtil.getStartWeekDay(DateUtil.addDay(isBefore ? calendarStartDt : startDt, i * 7));\n                                  var weekLastDt = DateUtil.getLastWeekDay(eventStartDt);\n                                  var eventEnd = DateUtil.diffDay(weekLastDt, endDt) > 0 ? isAfter ? calendarEndDt : endDt : weekLastDt;\n                                  ymd = DateUtil.format(eventStartDt, \"yyyyMMdd\");\n                                  colSpan = DateUtil.diffDay(eventEnd, eventStartDt) + 1;\n\n                                  var _data = _objectSpread(_objectSpread({}, event), {}, {\n                                    calendarId: calendarId,\n                                    colSpan: colSpan,\n                                    startDt: startDt,\n                                    endDt: endDt,\n                                    eventStartDt: eventStartDt\n                                  });\n\n                                  if (calendar[ymd]) {\n                                    calendar[ymd].push(_data);\n                                  } else {\n                                    calendar[ymd] = [_data];\n                                  }\n                                }\n                              }\n                            });\n\n                          case 6:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }()));\n\n              case 7:\n                runInAction(function () {\n                  _this2.setCalendar(calendar);\n                });\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function syncCalendar() {\n        return _syncCalendar.apply(this, arguments);\n      }\n\n      return syncCalendar;\n    }()\n  }, {\n    key: \"date\",\n    get: function get() {\n      return this._date;\n    }\n  }, {\n    key: \"calendars\",\n    get: function get() {\n      return [].concat(_toConsumableArray(this._commonCalendars), _toConsumableArray(this._userCalendars));\n    }\n  }, {\n    key: \"calendarSort\",\n    get: function get() {\n      var _this3 = this;\n\n      return this.calendars.filter(function (event) {\n        return _this3.selectIds.includes(event.calendarId);\n      }).map(function (_ref7) {\n        var calendarId = _ref7.calendarId;\n        return calendarId;\n      });\n    }\n  }, {\n    key: \"calendarMap\",\n    get: function get() {\n      var calendarMap = {};\n      this.calendars.forEach(function (_ref8) {\n        var bgColor = _ref8.bgColor,\n            color = _ref8.color,\n            calendarId = _ref8.calendarId;\n        calendarMap[calendarId] = {\n          bgColor: bgColor,\n          color: color\n        };\n      });\n      return calendarMap;\n    }\n  }, {\n    key: \"selectIds\",\n    get: function get() {\n      return this._selects;\n    }\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      var _this4 = this;\n\n      var copyCalendar = {};\n      Object.keys(this._calendar).forEach(function (ymd) {\n        copyCalendar[ymd] = _this4._calendar[ymd].filter(function (event) {\n          return _this4.selectIds.includes(event.calendarId);\n        }).sort(function (a, b) {\n          var diff = b.colSpan - a.colSpan;\n          return diff === 0 ? _this4.calendarSort.indexOf(a.calendarId) - _this4.calendarSort.indexOf(b.calendarId) : diff; // const diff = DateUtil.diffDay(a.startDt, b.startDt);\n          // diff === 0\n          //   ? DateUtil.diffDay(new Date(b.endDt), new Date(b.startDt)) -\n          //       DateUtil.diffDay(new Date(a.endDt), new Date(a.startDt)) -\n          //(this.calendarSort.indexOf(b.calendarId) -\n          //         this.calendarSort.indexOf(a.calendarId))\n          //   : diff;\n        });\n      });\n      return copyCalendar;\n    }\n  }, {\n    key: \"holidayMap\",\n    get: function get() {\n      return this._holidayMap;\n    }\n  }]);\n\n  return CalendarStore;\n}();\n\nvar calendarStore = new CalendarStore();\nexport default calendarStore;","map":null,"metadata":{},"sourceType":"module"}