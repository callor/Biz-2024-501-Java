{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useMemo, useState } from \"react\";\nimport LoginLayout, { LoginBox } from \"@components/layout/login\";\nimport { FormButtonBasic, FormConfrimButton, FormWrap, InputBox, RadioBox } from \"@components/mypage/form\";\nimport ButtonWrap from \"@components/common/button/ButtonWrap\";\nimport { useForm } from \"react-hook-form/dist/index.ie11\";\nimport { axios } from \"@utils/network.util\";\nimport { useRouter } from \"next/router\";\n\nconst FindIdPage = () => {\n  const router = useRouter();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    errors\n  } = useForm();\n  const {\n    0: sno,\n    1: setSno\n  } = useState(null);\n  const {\n    0: idList,\n    1: setIdList\n  } = useState([]);\n\n  const onSendSmsClick = async () => {\n    const mobile = getValues().mobile.replace(/[^\\d]/g, \"\");\n\n    if (mobile.length === 10 || mobile.length === 11) {\n      try {\n        const {\n          data: sno\n        } = await axios.post(\"/sms/cert\", {\n          mobile\n        });\n        setSno(sno);\n      } catch (error) {\n        var _error$response;\n\n        if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n          alert(\"인증횟수가 초과하였습니다.\\n잠시 후 다시 시도해주세요\");\n        }\n      }\n    } else {\n      alert(\"핸드폰 번호가 올바르지 않습니다.\");\n    }\n  };\n\n  const onSubmit = handleSubmit(async ({\n    kornm,\n    mobile,\n    certMsg\n  }) => {\n    try {\n      const {\n        data: idList\n      } = await axios.post(\"/user/find/id\", {\n        kornm,\n        mobile,\n        certMsg,\n        sno\n      });\n\n      if ((idList === null || idList === void 0 ? void 0 : idList.length) > 0) {\n        setIdList(idList);\n      } else {\n        alert(\"입력하신 정보와 일치하는 아이디가 없습니다.\");\n      }\n    } catch (error) {\n      alert(\"모든 항목을 적어주세요.\");\n    }\n  });\n  const IdList = useMemo(() => idList.map((id, idx) => /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"radio\",\n      id: `findId${idx}`,\n      name: \"selectId\",\n      value: id,\n      ref: register\n    }), /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: `findId${idx}`,\n      children: id\n    })]\n  }, `findId${idx}`)), [idList]);\n  const onIdSubmit = handleSubmit(({\n    selectId\n  }) => {\n    router.replace(selectId ? \"/signIn\" + `?id=${selectId}` : \"/signIn\");\n  });\n  return /*#__PURE__*/_jsxs(LoginLayout, {\n    children: [idList.length === 0 && /*#__PURE__*/_jsxs(LoginBox, {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"\\uAC00\\uC785\\uC2DC \\uC785\\uB825\\uD558\\uC168\\uB358 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }), /*#__PURE__*/_jsx(\"form\", {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsx(\"fieldset\", {\n          children: /*#__PURE__*/_jsxs(FormWrap, {\n            children: [/*#__PURE__*/_jsx(InputBox, {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                name: \"kornm\",\n                type: \"text\",\n                placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                ref: register({\n                  required: true\n                })\n              })\n            }), /*#__PURE__*/_jsxs(InputBox, {\n              hasButton: true,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                name: \"mobile\",\n                type: \"text\",\n                placeholder: \"\\uD734\\uB300\\uD3F0\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                ref: register({\n                  required: true\n                })\n              }), /*#__PURE__*/_jsx(FormButtonBasic, {\n                onClick: onSendSmsClick,\n                type: \"button\",\n                children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBC1C\\uC1A1\"\n              })]\n            }), sno && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(InputBox, {\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  name: \"certMsg\",\n                  type: \"text\",\n                  placeholder: \"\\uC778\\uC99D\\uBC88\\uD638\",\n                  ref: register({\n                    required: true\n                  })\n                })\n              }), /*#__PURE__*/_jsx(ButtonWrap, {\n                children: /*#__PURE__*/_jsx(FormConfrimButton, {\n                  onClick: onSubmit,\n                  type: \"submit\",\n                  children: \"\\uD655\\uC778\"\n                })\n              })]\n            })]\n          })\n        })\n      })]\n    }), idList.length > 0 && /*#__PURE__*/_jsxs(LoginBox, {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        children: \"\\uC544\\uC774\\uB514 \\uD655\\uC778\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"\\uAC00\\uC785\\uC2DC \\uC785\\uB825\\uD558\\uC168\\uB358 \\uC544\\uC774\\uB514\\uB97C \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"\n      }), /*#__PURE__*/_jsx(\"form\", {\n        onSubmit: onIdSubmit,\n        children: /*#__PURE__*/_jsx(\"fieldset\", {\n          children: /*#__PURE__*/_jsxs(FormWrap, {\n            children: [/*#__PURE__*/_jsx(RadioBox, {\n              children: IdList\n            }), /*#__PURE__*/_jsx(ButtonWrap, {\n              children: /*#__PURE__*/_jsx(FormConfrimButton, {\n                onClick: onIdSubmit,\n                children: \"\\uD655\\uC778\"\n              })\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default FindIdPage;","map":null,"metadata":{},"sourceType":"module"}