{"ast":null,"code":"import _regeneratorRuntime from \"/home/emp/front/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport ButtonWrap from \"@components/common/button/ButtonWrap\";\nimport LoginLayout, { LoginBox } from \"@components/layout/login\";\nimport { FormButtonBasic, FormConfrimButton, FormWrap, InputBox } from \"@components/mypage/form\";\nimport { axios } from \"@utils/network.util\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form/dist/index.ie11\";\n\nvar FindPaswwordPage = function FindPaswwordPage() {\n  var router = useRouter();\n\n  var _useState = useState(),\n      sno = _useState[0],\n      setSno = _useState[1];\n\n  var _useState2 = useState(),\n      userId = _useState2[0],\n      setUserId = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      getValues = _useForm.getValues;\n\n  var onSendSmsClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var mobile, _yield$axios$post, _sno, _error$response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              mobile = getValues().mobile.replace(/[^\\d]/g, \"\");\n\n              if (!(mobile.length === 10 || mobile.length === 11)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"/sms/cert\", {\n                mobile: mobile\n              });\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              _sno = _yield$axios$post.data;\n              setSno(_sno);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n\n              if ((_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n                alert(\"인증횟수가 초과하였습니다.\\n잠시 후 다시 시도해주세요\");\n              }\n\n            case 13:\n              _context.next = 16;\n              break;\n\n            case 15:\n              alert(\"핸드폰 번호가 올바르지 않습니다.\");\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function onSendSmsClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n      var loginId, kornm, mobile, certMsg, _yield$axios$post2, _userId;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              loginId = _ref2.loginId, kornm = _ref2.kornm, mobile = _ref2.mobile, certMsg = _ref2.certMsg;\n\n              if (!(loginId && kornm && mobile && certMsg)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(\"/user/find/pw\", {\n                loginId: loginId,\n                kornm: kornm,\n                mobile: mobile,\n                certMsg: certMsg,\n                sno: sno\n              });\n\n            case 5:\n              _yield$axios$post2 = _context2.sent;\n              _userId = _yield$axios$post2.data;\n\n              if (_userId) {\n                setUserId(_userId);\n              } else {\n                alert(\"일치하는 정보가 존재하지 않습니다.\");\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              alert(\"일치하는 정보가 존재하지 않습니다.\");\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              alert(\"모든 항목을 입력해주세요.\");\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  var onPasswordChange = handleSubmit( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4) {\n      var changePassword, changeConfirm;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              changePassword = _ref4.changePassword, changeConfirm = _ref4.changeConfirm;\n\n              if (!(changePassword === changeConfirm)) {\n                _context3.next = 13;\n                break;\n              }\n\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios.put(\"/user/find/change\", {\n                userId: userId,\n                changePassword: changePassword\n              });\n\n            case 5:\n              router.replace(\"/signIn\");\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              alert(\"잘못된 접근입니다.\");\n\n            case 11:\n              _context3.next = 14;\n              break;\n\n            case 13:\n              alert(\"비밀번호가 일치하지 않습니다.\");\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 8]]);\n    }));\n\n    return function (_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }());\n  return /*#__PURE__*/_jsxs(LoginLayout, {\n    children: [!userId && /*#__PURE__*/_jsxs(LoginBox, {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"\\uAC00\\uC785\\uD558\\uC168\\uB358 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }), /*#__PURE__*/_jsx(\"form\", {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsx(\"fieldset\", {\n          children: /*#__PURE__*/_jsxs(FormWrap, {\n            children: [/*#__PURE__*/_jsx(InputBox, {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                name: \"loginId\",\n                ref: register\n              })\n            }), /*#__PURE__*/_jsx(InputBox, {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                name: \"kornm\",\n                ref: register\n              })\n            }), /*#__PURE__*/_jsxs(InputBox, {\n              hasButton: true,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                placeholder: \"\\uD734\\uB300\\uD3F0\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                name: \"mobile\",\n                ref: register\n              }), /*#__PURE__*/_jsx(FormButtonBasic, {\n                onClick: onSendSmsClick,\n                type: \"button\",\n                children: \"\\uC778\\uC99D\\uBC88\\uD638 \\uBC1C\\uC1A1\"\n              })]\n            }), sno && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsx(InputBox, {\n                children: /*#__PURE__*/_jsx(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\uC778\\uC99D\\uBC88\\uD638\",\n                  name: \"certMsg\",\n                  ref: register\n                })\n              }), /*#__PURE__*/_jsx(ButtonWrap, {\n                children: /*#__PURE__*/_jsx(FormConfrimButton, {\n                  type: \"submit\",\n                  children: \"\\uD655\\uC778\"\n                })\n              })]\n            })]\n          })\n        })\n      })]\n    }), userId && /*#__PURE__*/_jsxs(LoginBox, {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC7AC\\uC124\\uC815 \\uD574\\uC8FC\\uC138\\uC694.\"\n      }), /*#__PURE__*/_jsx(\"form\", {\n        onSubmit: onPasswordChange,\n        children: /*#__PURE__*/_jsx(\"fieldset\", {\n          children: /*#__PURE__*/_jsxs(FormWrap, {\n            children: [/*#__PURE__*/_jsx(InputBox, {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"password\",\n                placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n                name: \"changePassword\",\n                ref: register({\n                  required: true\n                })\n              })\n            }), /*#__PURE__*/_jsx(InputBox, {\n              children: /*#__PURE__*/_jsx(\"input\", {\n                type: \"password\",\n                placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n                name: \"changeConfirm\",\n                ref: register({\n                  required: true\n                })\n              })\n            }), /*#__PURE__*/_jsx(ButtonWrap, {\n              children: /*#__PURE__*/_jsx(FormConfrimButton, {\n                children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC218\\uC815\"\n              })\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default FindPaswwordPage;","map":null,"metadata":{},"sourceType":"module"}