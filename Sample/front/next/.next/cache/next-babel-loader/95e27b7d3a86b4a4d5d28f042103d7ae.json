{"ast":null,"code":"import rootStore from \"@stores\";\nimport { axios } from \"@utils/network.util\";\nimport { flow, makeAutoObservable } from \"mobx\";\n\nclass AuthStore {\n  constructor() {\n    makeAutoObservable(this, {\n      getMemberData: flow,\n      userSignIn: flow,\n      userSignOut: flow\n    });\n  }\n\n  *getMemberData(token) {\n    try {\n      const {\n        data\n      } = yield axios.get(\"/user/info\", {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      return data;\n    } catch (error) {\n      var _error$response;\n\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        return undefined;\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  *userSignIn(id, pw) {\n    const {\n      data\n    } = yield axios.post(\"/api/signIn\", {\n      id,\n      pw\n    }, {\n      baseURL: \"/\"\n    });\n    return data;\n  }\n\n  *userSignOut() {\n    yield axios.delete(\"/api/signOut\", {\n      baseURL: \"/\"\n    });\n    rootStore.commonStore.isLoggedIn = false;\n    rootStore.commonStore.member = undefined;\n  }\n\n}\n\nexport default AuthStore;","map":null,"metadata":{},"sourceType":"module"}