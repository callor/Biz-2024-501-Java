{"ast":null,"code":"export default class ColorUtil {\n  static randomColor() {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  static isLight(hex) {\n    return this.getBrightness(hex) > 128;\n  }\n\n  static isDark(hex) {\n    return this.getBrightness(hex) <= 128;\n  }\n\n  static getBrightness(hex) {\n    if (hex.includes(\"#\")) {\n      hex = hex.substring(1);\n    }\n\n    if (hex.length === 3) {\n      hex = hex.replace(/(.)/g, \"$1$1\");\n    }\n\n    const rgb = parseInt(hex, 16);\n    const red = rgb >> 16 & 0xff;\n    const green = rgb >> 8 & 0xff;\n    const blue = rgb >> 0 & 0xff;\n    const brightness = (red * 299 + green * 587 + blue * 114) / 1000;\n    return brightness;\n  }\n\n  static getLuminance(hex) {\n    if (hex.includes(\"#\")) {\n      hex = hex.substring(1);\n    }\n\n    if (hex.length === 3) {\n      hex = hex.replace(/(.)/g, \"$1$1\");\n    }\n\n    const rgb = parseInt(hex, 16);\n    let red = rgb >> 16 & 0xff;\n    let green = rgb >> 8 & 0xff;\n    let blue = rgb >> 0 & 0xff;\n    const RsRGB = red / 255;\n    const GsRGB = green / 255;\n    const BsRGB = blue / 255;\n\n    if (RsRGB <= 0.03928) {\n      red = RsRGB / 12.92;\n    } else {\n      red = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    }\n\n    if (GsRGB <= 0.03928) {\n      green = GsRGB / 12.92;\n    } else {\n      green = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    }\n\n    if (BsRGB <= 0.03928) {\n      blue = BsRGB / 12.92;\n    } else {\n      blue = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}