{"ast":null,"code":"import _regeneratorRuntime from \"/home/emp/front/next/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emp/front/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport rootStore from \"@stores\";\nimport { axios } from \"@utils/network.util\";\nimport { flow, makeAutoObservable } from \"mobx\";\n\nvar AuthStore = /*#__PURE__*/function () {\n  function AuthStore() {\n    _classCallCheck(this, AuthStore);\n\n    makeAutoObservable(this, {\n      getMemberData: flow,\n      userSignIn: flow,\n      userSignOut: flow\n    });\n  }\n\n  _createClass(AuthStore, [{\n    key: \"getMemberData\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function getMemberData(token) {\n      var _yield$axios$get, data, _error$response;\n\n      return _regeneratorRuntime.wrap(function getMemberData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"/user/info\", {\n                headers: {\n                  authorization: \"Bearer \".concat(token)\n                }\n              });\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              return _context.abrupt(\"return\", data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (!(((_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", undefined);\n\n            case 14:\n              throw _context.t0;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getMemberData, null, [[0, 8]]);\n    })\n  }, {\n    key: \"userSignIn\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function userSignIn(id, pw) {\n      var _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function userSignIn$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"/api/signIn\", {\n                id: id,\n                pw: pw\n              }, {\n                baseURL: \"/\"\n              });\n\n            case 2:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              return _context2.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, userSignIn);\n    })\n  }, {\n    key: \"userSignOut\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function userSignOut() {\n      return _regeneratorRuntime.wrap(function userSignOut$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.delete(\"/api/signOut\", {\n                baseURL: \"/\"\n              });\n\n            case 2:\n              rootStore.commonStore.isLoggedIn = false;\n              rootStore.commonStore.member = undefined;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, userSignOut);\n    })\n  }]);\n\n  return AuthStore;\n}();\n\nexport default AuthStore;","map":null,"metadata":{},"sourceType":"module"}