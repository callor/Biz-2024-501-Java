user nginx;

# worker_processess: nginx 프로세스 실행가능 수
worker_processes 4;
# worker_rlimit_nofile : 워크 프로세스 수 - 작업 프로세스가 최대 열 수 있는 파일 수에 대한 제한을 설정하여 처리량을 늘려줌
worker_rlimit_nofile 204800;

error_log	/var/log/nginx/error.log warn;
pid		/var/run/nginx.pid;

events {
	 # worker_connections : 하나의 프로세스가 처리할 수 있는 커넥션 수
	 worker_connections 4096;
	 # 최대접속자 수 : worker_processess * worker_connections
	 
	 #use : 리눅스에서 socket을 관리하는 데 사용하는 방식 중 하나. epoll / poll / select 중 선택
	 use epoll;
	 
	 #multi_accept on;
}

http {
	include		/etc/nginx/mime.types;
	default_type	application/octet-stream;
	
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	  		  '$status $body_bytes_sent "$http_referer" '
			  '"$http_user_agent" "$http_x_forwarded_for"';
					
	access_log	/var/log/nginx/access.log main;
	
	sendfile	on;
	
	# tcp_nopush : 응답 헤더를 TCP packet 한 조각으로 보냄
	#tcp_nopush		on;
	# tcp_nodelay : 전송된 데이터를 버퍼링하지 않음. 실시간으로 느린 네트워크에서 작은 패킷 문제를 해결
	#tcp_nodelay	on;
	# reset_timedout_connection	: 서버가 응답하지 않은 클라이언트에서 연결을 닫을 수 있도록 허용
	reset_timedout_connection	on;
	# client_body_timeout 		: 요청시간 초과
	client_body_timeout		10;
	# keepalive_requests		: [OPTION] 요청 없이 REST 요청 유지 개수
	keepalive_requests 		100;
	# client_max_body_size		: 파일 최대 용량
	client_max_body_size		50M;
	
	# keepalive_timeout : 클라이언트에서 커넥션을 유지시키는 시간
	# 값이 높으면 불필요한 커넥션을 유지하기 때문에 낮은값 혹은 0을 권장(default = 75)
	keepalive_timeout 30;
	# send_timeout : 요청을 보낸 후 응답을 받기까지 시간 (s)
	send_timeout 2;
	
	# gzip 관련 설정 추가 2021-01-15
	# gzip 				: 컨텐츠 압축 사용
	gzip on;
	# gzip_disable 		: 압축 적용하지 않을 브라우저 지정 : (msie6 : IE6 작동 x)
	gzip_disable "msie6";
	
	# gzip_comp_level	: 숫자가 클수록 압축율은 올라가지만 압축속도는 느려짐. ( 1 ~ 9 )
	gzip_comp_level 1;
	# gzip_min_length	: 압축을 적용할 컨텐츠의 최소사이즈 지정. 지정한것보다 작은파일은 압축시키지않는다.
	gzip_min_length 1000;
	# gzip_buffers 		: 버퍼의 숫자, 크기 지정
	gzip_buffers 16 8k;
	# gzip_proxied 		: 프록시나 캐시 서버에 요청할 경우 동작여부 설정 ( any: 항상 압축 )
	gzip_proxied any;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	
	# /etc/nginx/conf.d에 .conf로 끝나는 파일들을 포함시켜 가져옴
	include /etc/nginx/conf.d/*.conf;

}
